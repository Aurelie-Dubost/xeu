import pandas as pd

# Corrected sample nested dictionary based on the provided structure
nested_dict = {
    '2001-01-01': {
        'EU_STOXX50E': {
            'IV': {1.0: {120: 24.48}},
            'IVFD': {1.0: {120: 23.45}},
            'RV': {21.0: {120: 21.00}},
            'spot': {None: {120: 4701.68}}
        }
    },
    '2001-01-02': {
        'EU_STOXX50E': {
            'IV': {1.0: {120: 25.20}},
            'IVFD': {1.0: {120: 24.47}},
            'RV': {21.0: {120: 4600.48}},
            'spot': {None: {120: 4600.00}}
        }
    },
    '2001-01-03': {
        'EU_STOXX50E': {
            'IV': {1.0: {120: 25.84}},
            'IVFD': {1.0: {120: 25.64}},
            'RV': {21.0: {120: 22.50}}
        }
    }
}

# Function to convert nested dictionary to multi-indexed DataFrame
def nested_dict_to_df(nested_dict):
    records = []
    for date_str, udl_data in nested_dict.items():
        for udl, param_data in udl_data.items():
            for param, matu_data in param_data.items():
                for matu, values in matu_data.items():
                    for value, actual_value in values.items():
                        records.append((date_str, udl, param, matu, value, actual_value))
    
    df = pd.DataFrame(records, columns=['Date', 'udl', 'param', 'matu', 'value', 'actual_value'])
    df['Date'] = pd.to_datetime(df['Date'])
    
    # Pivot the DataFrame to get the desired multi-index structure
    df_pivoted = df.pivot_table(index='Date', columns=['udl', 'param', 'matu', 'value'], values='actual_value')
    
    return df_pivoted

# Convert the nested dictionary to a DataFrame
df_from_dict = nested_dict_to_df(nested_dict)

# Display the DataFrame
df_from_dict