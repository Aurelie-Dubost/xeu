# Re-importing necessary libraries after reset
import pandas as pd
import numpy as np

# Sample DataFrame creation
dates = pd.date_range('2023-01-01', periods=6, freq='D')
data = {
    'spot': [100, 105, 110, 115, 120, 125],
    'strike': [110, 110, 110, 110, 110, 110],
    'position': ['long', 'short', 'not', 'long', 'short', 'not'],
    'exp_date': ['2023-01-06', '2023-01-06', '2023-01-06', '2023-01-06', '2023-01-06', '2023-01-06']
}
df = pd.DataFrame(data, index=dates)

# Adjusting the PnL calculation function to handle DataFrame input
def calculate_straddle_pnl(row, df):
    # Find the spot price at expiration date
    exp_date = pd.to_datetime(row['exp_date'])
    if exp_date not in df.index:
        return 0  # If expiration date is not in the DataFrame index, return 0
    
    spot_at_expiration = df.loc[exp_date, 'spot']
    strike_price = row['strike']
    call_premium = put_premium = 5  # Assuming fixed premiums for simplicity
    
    if row['position'] == 'long':
        pnl = max(spot_at_expiration - strike_price, strike_price - spot_at_expiration) - (call_premium + put_premium)
    elif row['position'] == 'short':
        pnl = (call_premium + put_premium) - max(spot_at_expiration - strike_price, strike_price - spot_at_expiration)
    else:  # 'not' position
        pnl = 0
    
    return pnl

# Apply the PnL calculation for each row
df['pnl'] = df.apply(calculate_straddle_pnl, df=df, axis=1)
df['cum_pnl'] = df['pnl'].cumsum()

df